{"ast":null,"code":"import axios from \"axios\"; //import ipCollection2 from \"../config.json\";\n\nexport default {\n  test: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/test'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n    /*\n    .then(function (response) {\n    // handle success\n    console.log(response);\n    })\n    .catch(function (error) {\n    // handle error\n    console.log(error);\n    })\n    .finally(function () {\n    // always executed\n    console.log('axios test');\n    });*/\n\n  },\n  osirisTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/osirisTest'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n    /*\n    .then(function (response) {\n    // handle success\n    console.log(response);\n    })\n    .catch(function (error) {\n    // handle error\n    console.log(error);\n    })\n    .finally(function () {\n    // always executed\n    console.log('axios test');\n    });*/\n\n  },\n  dataTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/dataTest'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  usernameChange: async function (a) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/userChange', {\n        firstName: a\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  passwordChange: async function (b) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/testTwoo', {\n        lastName: b\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  osirisChange: async function (o) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/osirisChange', {\n        osirisip: o\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  dataChange: async function (d) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/dataChange', {\n        newData: d\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  getAllWAN: async function () {\n    const output = await Promise.all([axios.get(\"http://localhost:5000/nconfig\"), axios.get(\"http://localhost:5000/latthr\")]).then(([config, latthr]) => {\n      console.log(config);\n      console.log(latthr);\n      let wans = config.data.interface.wan;\n      console.log(wans);\n      let latthu = latthr.data;\n      console.log(latthu);\n      return {\n        regdata: wans,\n        latthu: latthu\n      };\n    });\n    return output; //const result= await axios.get(\"http://localhost:5000/nconfig\")\n    //const res= await axios.get(\"http://localhost:5000/latthr\");\n  },\n  getIPs: async function (i) {\n    const result = await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }*/\n    );\n    console.log(result);\n    let ipCollection = result.data.interface.wan;\n    console.log(ipCollection);\n    return new Promise(resolve => {\n      for (let k = 0; k < ipCollection.length; k++) {\n        let data = ipCollection[k]; // if (ipCollection[k].subflow==i)\n\n        if (data.subflow == i) resolve({\n          name: data.name,\n          gatewayIP: data.gatewayIP,\n          IP: data.IP,\n          proxyIP: data.proxyIP,\n          status: data.status\n        });\n      }\n    });\n  },\n  setIPs: function (arr) {\n    console.log(arr);\n    let arr2 = [];\n\n    for (let k = 1; k < arr.length; k++) {\n      arr[k].subflow = k;\n      arr2.push(arr[k]);\n    }\n\n    console.log(arr2);\n    axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  },\n  setHaipe: function (obj) {\n    console.log(obj);\n    axios.post(\"http://127.0.0.1:5000/haipe\", {\n      \"client\": obj.client,\n      \"server\": obj.server,\n      \"status\": obj.status\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  }\n};","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/lastUpdate/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/23-Project-3/finishedProject/osiris-front-end/src/utils/adminAPI.js"],"names":["axios","test","result","get","error","console","log","osirisTest","dataTest","usernameChange","a","post","firstName","passwordChange","b","lastName","osirisChange","o","osirisip","dataChange","d","newData","getAllWAN","output","Promise","all","then","config","latthr","wans","data","interface","wan","latthu","regdata","getIPs","i","ipCollection","resolve","k","length","subflow","name","gatewayIP","IP","proxyIP","status","setIPs","arr","arr2","push","headers","JSON","stringify","setHaipe","obj","client","server"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n//import ipCollection2 from \"../config.json\";\n\n\n\nexport default {\n\n  test: async function() {\n    try{const result = await axios.get('http://127.0.0.1:5000/test')\n    //console.log(result)\n    return result}\n    catch(error){console.log(error)}\n    /*\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n    console.log('axios test');\n  });*/\n    },\n    osirisTest: async function() {\n      try{const result = await axios.get('http://127.0.0.1:5000/osirisTest')\n      //console.log(result)\n      return result}\n      catch(error){console.log(error)}\n      /*\n    .then(function (response) {\n      // handle success\n      console.log(response);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function () {\n      // always executed\n      console.log('axios test');\n    });*/\n      },\n      dataTest: async function() {\n        try{const result = await axios.get('http://127.0.0.1:5000/dataTest')\n        //console.log(result)\n        return result}\n        catch(error){console.log(error)}\n     \n        },\n    usernameChange: async function(a) {\n     \n      \n      try{const result = await axios.post('http://127.0.0.1:5000/userChange', {\n        firstName: a\n      })\n      //console.log(result)\n      return result}\n      catch(error){console.log(error)}\n      ////////////////\n    \n      },\n\n      passwordChange: async function(b) {\n     \n      \n        try{const result = await axios.post('http://127.0.0.1:5000/testTwoo', {\n          lastName: b\n        })\n        //console.log(result)\n        return result}\n        catch(error){console.log(error)}\n        ////////////////\n      \n        },\n        osirisChange: async function(o) {\n     \n      \n          try{const result = await axios.post('http://127.0.0.1:5000/osirisChange', {\n            osirisip: o\n          })\n          //console.log(result)\n          return result}\n          catch(error){console.log(error)}\n          ////////////////\n        \n          },\ndataChange: async function(d) {\n     \n      \n  try{const result = await axios.post('http://127.0.0.1:5000/dataChange', {\n          newData: d\n            })\n            //console.log(result)\n          return result}\n          catch(error){console.log(error)}\n            ////////////////\n          \n            },\n  getAllWAN: async function() {\n    \n    const output = await Promise.all([axios.get(\"http://localhost:5000/nconfig\"),axios.get(\"http://localhost:5000/latthr\")]).then(([config,latthr])=>{\n    console.log(config)\n    console.log(latthr)\n    \n   \n      \n    let wans=config.data.interface.wan;\n    console.log(wans)\n    let latthu = latthr.data;\n    console.log(latthu)\n    return({regdata:wans,latthu:latthu})\n  })\n  return output;\n    //const result= await axios.get(\"http://localhost:5000/nconfig\")\n    //const res= await axios.get(\"http://localhost:5000/latthr\");\n    \n    \n    },\ngetIPs: async function(i) {\n  const result= await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }*/\n  );\n  console.log(result);\n  let ipCollection=result.data.interface.wan;\n  console.log(ipCollection);\n  return new Promise((resolve)=>{\n      \n      \n      for(let k=0;k<ipCollection.length;k++){\n                let data=ipCollection[k];\n         // if (ipCollection[k].subflow==i)\n         if (data.subflow==i)\n                resolve({\n                name:data.name,\n                gatewayIP:data.gatewayIP,\n                IP:data.IP,\n                proxyIP:data.proxyIP,\n                status:data.status\n           });\n          } \n        }   \n    );\n  },\n  setIPs:function(arr){\n      console.log(arr);\n      let arr2=[];\n      for(let k=1;k<arr.length;k++){\n        arr[k].subflow=k;\n        arr2.push(arr[k]);\n      }\n      console.log(arr2);\n      axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }\n      ).then(result=>console.log(\"Heyy \"+JSON.stringify(result.data)));\n     //here will be send to back end for saving into json file\n      \n  },\n  setHaipe: function(obj){\n    console.log(obj);\n    axios.post(\"http://127.0.0.1:5000/haipe\", {\n        \"client\" : obj.client,\n        \"server\": obj.server,\n        \"status\": obj.status\n    }, { headers: {  \n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'}\n    }\n    ).then( result =>\n        console.log(\"Heyy \"+JSON.stringify(result.data))\n    );\n   //here will be send to back end for saving into json file\n    \n}\n}  \n\n\n \n"]},"metadata":{},"sourceType":"module"}