{"ast":null,"code":"import axios from \"axios\"; //import ipCollection2 from \"../config.json\";\n\nexport default {\n  getIPs: async function (i) {\n    const result = await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }*/\n    );\n    console.log(result);\n    let ipCollection = result.data.interface.wan;\n    console.log(ipCollection);\n    return new Promise(resolve => {\n      for (let k = 0; k < ipCollection.length; k++) {\n        let data = ipCollection[k]; // if (ipCollection[k].subflow==i)\n\n        if (data.subflow == i) resolve({\n          name: data.name,\n          gatewayIP: data.gatewayIP,\n          IP: data.IP,\n          proxyIP: data.proxyIP,\n          status: data.status\n        });\n      }\n    });\n  },\n  getHaipe: async function () {\n    const result = await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n    }*/\n    );\n    let haipe = result.data.haipe;\n    console.log(haipe);\n    return new Promise(resolve => {\n      resolve({\n        status: haipe.status,\n        client: haipe.client,\n        server: haipe.server\n      });\n    });\n  },\n  setHaipe: function (obj) {\n    console.log(obj);\n    axios.post(\"http://127.0.0.1:5000/haipe\", {\n      \"client\": obj.client,\n      \"server\": obj.server,\n      \"status\": obj.status\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  },\n  setIPs: function (arr) {\n    console.log(arr);\n    let arr2 = [];\n\n    for (let k = 1; k < arr.length; k++) {\n      console.log(arr);\n      arr[k].subflow = k;\n      arr2.push(arr[k]);\n    }\n\n    console.log(arr2);\n    axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  },\n  getForwardConfig: async function () {\n    const result = await axios.get(\"http://127.0.0.1:5000/getForwardConfig\");\n    console.log(result);\n    let config = result.data.forward; // console.log(config);\n\n    return new Promise(resolve => {\n      resolve({\n        \"config\": config\n      });\n    });\n  },\n  setForwardConfig: function (append, ports) {\n    let data = {\n      append: append,\n      port: ports\n    };\n    return axios.post(\"http://127.0.0.1:5000/setForwardConfig\", data, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/portApps/networkConsole/src/utils/API.js"],"names":["axios","getIPs","i","result","get","console","log","ipCollection","data","interface","wan","Promise","resolve","k","length","subflow","name","gatewayIP","IP","proxyIP","status","getHaipe","haipe","client","server","setHaipe","obj","post","headers","then","JSON","stringify","setIPs","arr","arr2","push","getForwardConfig","config","forward","setForwardConfig","append","ports","port"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n//import ipCollection2 from \"../config.json\";\n\n\n\nexport default {\n\ngetIPs: async function(i) {\n  const result= await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }*/\n  );\n  console.log(result);\n  let ipCollection=result.data.interface.wan;\n  console.log(ipCollection);\n  return new Promise((resolve)=>{\n      \n      \n      for(let k=0;k<ipCollection.length;k++){\n                let data=ipCollection[k];\n         // if (ipCollection[k].subflow==i)\n         if (data.subflow==i)\n                resolve({\n                name:data.name,\n                gatewayIP:data.gatewayIP,\n                IP:data.IP,\n                proxyIP:data.proxyIP,\n                status:data.status\n           });\n          } \n        }   \n    );\n  },\n    getHaipe: async function(){\n        const result= await axios.get(\"http://localhost:5000/nconfig\"\n        /*, arr2, { headers: {  \n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'}\n        }*/\n        );\n        let haipe = result.data.haipe;\n        console.log(haipe)\n        return new Promise((resolve)=>{\n            resolve({\n                status: haipe.status,\n                client: haipe.client,\n                server: haipe.server\n            });\n        });\n    },\n    setHaipe: function(obj){\n        console.log(obj);\n        axios.post(\"http://127.0.0.1:5000/haipe\", {\n            \"client\" : obj.client,\n            \"server\": obj.server,\n            \"status\": obj.status\n        }, { headers: {  \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'}\n        }\n        ).then( result =>\n            console.log(\"Heyy \"+JSON.stringify(result.data))\n        );\n       //here will be send to back end for saving into json file\n        \n    },\n  setIPs:function(arr){\n      console.log(arr);\n      let arr2=[];\n      for(let k=1;k<arr.length;k++){\n        console.log(arr);\n        arr[k].subflow=k;\n        arr2.push(arr[k]);\n      }\n      console.log(arr2);\n      axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }\n      ).then(result=>console.log(\"Heyy \"+JSON.stringify(result.data)));\n     //here will be send to back end for saving into json file\n      \n  },\n\n  getForwardConfig: async function() {\n    const result= await axios.get(\"http://127.0.0.1:5000/getForwardConfig\");\n    console.log(result);\n    let config=result.data.forward;\n   // console.log(config);\n    return new Promise((resolve)=>{\n        \n          resolve({\"config\":config});\n          }   \n      );\n    },\n\n  setForwardConfig: function(append,ports) {\n      let data={\n          append:append,\n          port:ports,\n        \n      }\n    return(\n      axios.post(\"http://127.0.0.1:5000/setForwardConfig\", data, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }\n      )\n     ); \n   }\n  \n}  \n\n\n \n"]},"metadata":{},"sourceType":"module"}