{"ast":null,"code":"var _jsxFileName = \"/Users/Rmos/codingBootcamp/lastUpdate/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/23-Project-3/finishedProject/osiris-front-end/src/components/SubFlow/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Radio from \"../Radio\";\nimport TextField from \"../TextField\";\nimport API from \"../../utils/API\";\nimport { Header, Container, Form } from 'semantic-ui-react';\nimport \"./style.css\";\n\nfunction SubFlow({\n  i,\n  arr,\n  reset,\n  sError,\n  f\n}) {\n  const [radio, setRadio] = useState({\n    status: false,\n    //checked\n    label: \"disabled\"\n  });\n  const [IPSettings, setIPSettings] = useState({\n    name: \"\",\n    gatewayIP: \"\",\n    IP: \"\",\n    proxyIP: \"\"\n  }); //connectionName\n\n  const [error, setError] = useState({\n    nameError: \"\",\n    gatewayIPError: \"\",\n    IPError: \"\",\n    proxyIPError: \"\"\n  });\n  useEffect(() => {\n    loadIPs();\n  }, []);\n  useEffect(() => {\n    //arr[i]={name:IPSettings.name,gatewayIP:IPSettings.gatewayIP,IP:IPSettings.IP,proxyIP:IPSettings.proxyIP,status:radio.status}//connectionName,status\n    f(i, {\n      name: IPSettings.name,\n      gatewayIP: IPSettings.gatewayIP,\n      IP: IPSettings.IP,\n      proxyIP: IPSettings.proxyIP,\n      status: radio.status\n    });\n  }, [IPSettings, radio.status]);\n  useEffect(() => {\n    if (reset && radio.status) {\n      setIPSettings({ ...IPSettings,\n        name: \"\",\n        gatewayIP: \"\",\n        IP: \"\",\n        proxyIP: \"\"\n      });\n      reset = false;\n    } else {\n      setIPSettings({ ...IPSettings\n      });\n    }\n  }, [reset]);\n  useEffect(() => {\n    if (error.nameError === \"\" && error.gatewayIPError === \"\" && error.IPError === \"\" && error.proxyIPError === \"\") {\n      sError(false, i);\n    } else {\n      sError(true, i);\n    }\n  }, [error]); // Loads all IP's and set them to IPSettingd\n\n  function loadIPs() {\n    API.getIPs(i).then(res => {\n      //arr[i]=res;\n      f(i, res); // console.log(res);\n\n      if (res) {\n        setIPSettings({ ...IPSettings,\n          name: res.name,\n          gatewayIP: res.gatewayIP,\n          IP: res.IP,\n          proxyIP: res.proxyIP\n        });\n        res.status ? setRadio({\n          status: true,\n          label: \"enabled\"\n        }) : setRadio({\n          status: false,\n          label: \"disabled\"\n        });\n      }\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  function toggle() {\n    setRadio(prevState => {\n      return {\n        status: !prevState.status,\n        label: prevState.label === \"disabled\" ? \"enabled\" : \"disabled\"\n      };\n    });\n  }\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target; //console.log(\"name:\"+value);\n\n    if (name === \"name\") {\n      // if (isValidName(value)){\n      console.log(\"Name is valid\"); //}\n    } else {\n      if (isValidIP(name, value)) {\n        console.log(\"IP is valid\");\n      }\n    }\n\n    setIPSettings({ ...IPSettings,\n      [name]: value\n    });\n  }\n\n  function isValidIP(name, value) {\n    //IP address validation\n    //without port: const regxIP=/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    //with port\n    const regxIP = /^((?:2[0-5]{2}|1\\d{2}|[1-9]\\d|[1-9])\\.(?:(?:2[0-5]{2}|1\\d{2}|[1-9]\\d|\\d)\\.){2}(?:2[0-5]{2}|1\\d{2}|[1-9]\\d|\\d))(:(\\d|[1-9]\\d|[1-9]\\d{2,3}|[1-5]\\d{4}|6[0-4]\\d{3}|654\\d{2}|655[0-2]\\d|6553[0-5]))?$/;\n\n    if (regxIP.test(value)) {\n      setError({ ...error,\n        [name + \"Error\"]: \"\"\n      });\n      return true;\n    }\n\n    const temp = name + \"Error\";\n    setError({ ...error,\n      [temp]: \"Invalid IP\"\n    });\n    return false;\n  }\n\n  return React.createElement(Container, {\n    className: \"containerm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h2\",\n    style: {\n      paddingLeft: '0.7rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"SubFlow \", i), React.createElement(Radio, {\n    status: radio.status,\n    label: radio.label,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Connection Name\",\n    name: \"name\",\n    onChange: handleInputChange,\n    disabled: radio.status ? false : true,\n    className: \"inp\",\n    fluid: true,\n    value: IPSettings.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, error.nameError), React.createElement(TextField, {\n    label: \"Gateway IP Address\",\n    name: \"gatewayIP\",\n    onChange: handleInputChange,\n    disabled: radio.status ? false : true,\n    className: \"inp\",\n    fluid: true,\n    value: IPSettings.gatewayIP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, error.gatewayIPError), React.createElement(TextField, {\n    label: \"IP Address\",\n    name: \"IP\",\n    onChange: handleInputChange,\n    disabled: radio.status ? false : true,\n    className: \"inp\",\n    fluid: true,\n    value: IPSettings.IP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, error.IPError), React.createElement(TextField, {\n    label: \"Proxy IP Address\",\n    name: \"proxyIP\",\n    onChange: handleInputChange,\n    disabled: radio.status ? false : true,\n    className: \"inp\",\n    fluid: true,\n    value: IPSettings.proxyIP,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, error.proxyIPError)));\n}\n\nexport default SubFlow; //error={{ content: 'Please enter valid IP', pointing: 'below' }}","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/lastUpdate/UCLA-LA-FSF-PT-09-2019-U-C-master/01-Class-Content/23-Project-3/finishedProject/osiris-front-end/src/components/SubFlow/index.js"],"names":["React","useState","useEffect","Radio","TextField","API","Header","Container","Form","SubFlow","i","arr","reset","sError","f","radio","setRadio","status","label","IPSettings","setIPSettings","name","gatewayIP","IP","proxyIP","error","setError","nameError","gatewayIPError","IPError","proxyIPError","loadIPs","getIPs","then","res","catch","err","console","log","toggle","prevState","handleInputChange","event","value","target","isValidIP","regxIP","test","temp","paddingLeft","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport Radio from \"../Radio\";\nimport TextField from \"../TextField\";\nimport API from \"../../utils/API\"\nimport { Header, Container, Form } from 'semantic-ui-react'\nimport \"./style.css\"\n\nfunction SubFlow({i,arr,reset,sError,f}){\n    const [radio,setRadio]=useState({\n        status:false,//checked\n        label:\"disabled\"\n    \n     });\n     const [IPSettings,setIPSettings]=useState({name:\"\",gatewayIP:\"\",IP:\"\",proxyIP:\"\"});//connectionName\n     const [error,setError]=useState({nameError:\"\",gatewayIPError:\"\",IPError:\"\",proxyIPError:\"\"});\n\n     useEffect(() => {\n        loadIPs();\n        \n       \n      }, [])\n\n      useEffect(()=>{\n          //arr[i]={name:IPSettings.name,gatewayIP:IPSettings.gatewayIP,IP:IPSettings.IP,proxyIP:IPSettings.proxyIP,status:radio.status}//connectionName,status\n          f(i,{name:IPSettings.name,gatewayIP:IPSettings.gatewayIP,IP:IPSettings.IP,proxyIP:IPSettings.proxyIP,status:radio.status});\n      },[IPSettings,radio.status]);\n\n      useEffect(()=>{\n       if(reset&&(radio.status)){   \n         setIPSettings({...IPSettings,name:\"\",gatewayIP:\"\",IP:\"\",proxyIP:\"\"});  \n         reset=false;\n       } \n       else{\n        setIPSettings({...IPSettings});\n       } \n    },[reset]);\n\n    useEffect(()=>{\n      if(error.nameError===\"\"&&error.gatewayIPError===\"\"&&error.IPError===\"\"&&error.proxyIPError===\"\"){\n        sError(false,i);\n      }\n      else{\n        sError(true,i);\n      }\n    },[error]);\n     // Loads all IP's and set them to IPSettingd\n     function loadIPs() {\n       API.getIPs(i)\n        .then(res => {\n            //arr[i]=res;\n            f(i,res);\n           // console.log(res);\n          if (res){\n            setIPSettings({...IPSettings,name:res.name,gatewayIP:res.gatewayIP,IP:res.IP,proxyIP:res.proxyIP});\n            (res.status)?setRadio({status:true,label:\"enabled\"}):setRadio({status:false,label:\"disabled\"});\n            \n          } \n        } \n        )\n        .catch(err => console.log(err));\n    };\n     \n    function toggle(){ setRadio((prevState) => {return ({status: !prevState.status,\n                        label: (prevState.label===\"disabled\")? \"enabled\"\n                        : \"disabled\"\n    });});} \n\n    function handleInputChange(event){\n\n        const { name, value } = event.target;\n        //console.log(\"name:\"+value);\n        if (name===\"name\"){\n           // if (isValidName(value)){\n              console.log(\"Name is valid\");\n               \n          \n            //}\n        }\n        else{\n          if (isValidIP(name,value)){\n           console.log(\"IP is valid\")\n          \n          }\n          \n        }\n       \n        setIPSettings({...IPSettings, [name]: value});\n       \n    }\n    function isValidIP(name,value){\n      //IP address validation\n      //without port: const regxIP=/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n      //with port\n      const regxIP=/^((?:2[0-5]{2}|1\\d{2}|[1-9]\\d|[1-9])\\.(?:(?:2[0-5]{2}|1\\d{2}|[1-9]\\d|\\d)\\.){2}(?:2[0-5]{2}|1\\d{2}|[1-9]\\d|\\d))(:(\\d|[1-9]\\d|[1-9]\\d{2,3}|[1-5]\\d{4}|6[0-4]\\d{3}|654\\d{2}|655[0-2]\\d|6553[0-5]))?$/;\n      \n      if(regxIP.test(value)){\n          setError({...error,[name+\"Error\"]:\"\"}); \n          return true\n\n      }\n      const temp=name+\"Error\";\n      setError({...error,[temp]:\"Invalid IP\"});\n      return false;\n      \n      \n    }\n\n                   \n    \n    return (\n        <Container className=\"containerm\" >\n        <Header as='h2' style={{ paddingLeft: '0.7rem' }}>SubFlow {i}</Header>\n        <Radio status={radio.status} label={radio.label} toggle={toggle}/>\n        <Form>\n        <TextField label=\"Connection Name\" name=\"name\" onChange={handleInputChange} disabled={radio.status?false:true}\n       className=\"inp\" fluid value={IPSettings.name} />  \n       <span style={{color: \"red\"}}>{error.nameError}</span>\n        <TextField label=\"Gateway IP Address\" name=\"gatewayIP\" onChange={handleInputChange} disabled={radio.status?false:true} className=\"inp\" fluid value={IPSettings.gatewayIP}  />\n        <span style={{color: \"red\"}}>{error.gatewayIPError}</span>\n        <TextField label=\"IP Address\" name=\"IP\" onChange={handleInputChange} disabled={radio.status?false:true} className=\"inp\" fluid value={IPSettings.IP} />\n        <span style={{color: \"red\"}}>{error.IPError}</span>\n        <TextField label=\"Proxy IP Address\" name=\"proxyIP\" onChange={handleInputChange} disabled={radio.status?false:true} className=\"inp\"  fluid value={IPSettings.proxyIP} />\n        <span style={{color: \"red\"}}>{error.proxyIPError}</span>\n        </Form>\n       </Container> \n    );\n\n}\n\nexport default SubFlow;\n\n//error={{ content: 'Please enter valid IP', pointing: 'below' }}"]},"metadata":{},"sourceType":"module"}