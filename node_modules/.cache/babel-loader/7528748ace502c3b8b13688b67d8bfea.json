{"ast":null,"code":"var _jsxFileName = \"/Users/Rmos/codingBootcamp/portApps/networkConsole/src/components/ForwardConfig/index.js\";\nimport React, { useState, useEffect, prevState } from \"react\";\nimport { Container, Button } from 'semantic-ui-react';\nimport \"./style.css\";\nimport Label from \"../Label\";\nimport TextArea from \"../TextArea\";\nimport TextField from \"../TextField\";\nimport API from \"../../utils/API.js\";\nimport { isNumber } from \"util\";\nimport { isFlowBaseAnnotation } from \"@babel/types\";\n\nfunction ForwardConfig() {\n  let [data, setData] = useState([]);\n  const [userPort, setUserPort] = useState({\n    \"port\": \"\"\n  });\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadForwardConfig();\n  }, []);\n\n  function loadForwardConfig() {\n    API.getForwardConfig().then(res => {\n      //write consecutive ports as ranges\n      let data2 = res.config;\n      console.log(data2.length);\n      let rslt = [];\n      let low = data2[0];\n      let high = data2[0];\n\n      for (let i = 1; i < data2.length; i++) {\n        if (data2[i] === high + 1) {\n          high = data2[i];\n        } else {\n          if (low !== high) {\n            rslt.push(low + \"-\" + high);\n          } else {\n            rslt.push(low);\n          }\n\n          low = data2[i];\n          high = data2[i];\n          console.log(\"Hrrrr\" + rslt);\n        }\n      }\n\n      if (low !== high) {\n        rslt.push(low + \"-\" + high);\n      } else {\n        rslt.push(low);\n      } //setData(data=>[...data,...res.config]);\n\n\n      setData(data => [...data, ...rslt]);\n    }).catch(err => console.log(err));\n  }\n\n  ;\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserPort({ ...userPort,\n      [name]: value\n    });\n    setError(\"\");\n  };\n\n  function handleNew() {\n    if (validPorts()) {\n      console.log(\"New:\" + userPort.port);\n      API.setForwardConfig(false, userPort.port).then(result => window.location.reload(false));\n    } else {\n      console.log(error);\n    }\n  }\n\n  function handleAppend() {\n    if (validPorts()) {\n      console.log(\"Append:\" + userPort.port);\n      API.setForwardConfig(true, userPort.port).then(result => window.location.reload(false));\n    } else {\n      console.log(error);\n    }\n  }\n\n  function handleReset() {\n    API.setForwardConfig(false, []).then(result => window.location.reload(false));\n  } //ports should be numbers seperated by commas or number ranges designated by - and should be between 1-65535\n\n\n  function validPorts() {\n    var isnum = /^\\d+$/;\n    const prts = userPort.port.split(\",\");\n\n    for (let i = 0; i < prts.length; i++) {\n      //If not number\n      if (!isnum.test(prts[i])) {\n        //is a range\n        if (prts[i].indexOf(\"-\") !== -1) {\n          const range = prts[i].split(\"-\"); //range is not a number or lower range is bigger than upper range\n\n          if (!isnum.test(range[0]) || !isnum.test(range[1]) || parseInt(range[0]) > parseInt(range[1])) {\n            console.log(isnum.test(range[0]));\n            setError(\"Invalid Range of Ports\");\n            return false;\n          }\n        } else {\n          setError(\"A port should be of a number type!!\");\n          return false;\n        }\n      } else {\n        //is not between 1 and 65535\n        if (1 > parseInt(prts[i]) || parseInt(prts[i]) > 65535) {\n          setError(\"Ports have to be in the range 1-65535\");\n          return false;\n        }\n      }\n    }\n\n    setError(\"\");\n    return true;\n  }\n\n  return React.createElement(Container, {\n    className: \"container forwardContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Label, {\n    message: \"Current List Of Ports:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(TextArea, {\n    readOnly: true,\n    style: {\n      marginBottom: '2em'\n    },\n    value: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(Label, {\n    message: \"Add Ports:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    style: {\n      marginBottom: '1em'\n    },\n    onChange: handleInputChange,\n    value: userPort.port,\n    name: \"port\",\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    style: {\n      color: \"red\",\n      marginTop: \"1em\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, error), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: \"button\",\n    attached: \"left\",\n    onClick: handleNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"New\"), React.createElement(Button, {\n    className: \"button\",\n    attached: \"right\",\n    onClick: handleAppend,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Append\"), React.createElement(Button, {\n    className: \"button\",\n    attached: \"right\",\n    onClick: handleReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nexport default ForwardConfig;","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/portApps/networkConsole/src/components/ForwardConfig/index.js"],"names":["React","useState","useEffect","prevState","Container","Button","Label","TextArea","TextField","API","isNumber","isFlowBaseAnnotation","ForwardConfig","data","setData","userPort","setUserPort","error","setError","loadForwardConfig","getForwardConfig","then","res","data2","config","console","log","length","rslt","low","high","i","push","catch","err","handleInputChange","event","name","value","target","handleNew","validPorts","port","setForwardConfig","result","window","location","reload","handleAppend","handleReset","isnum","prts","split","test","indexOf","range","parseInt","marginBottom","color","marginTop"],"mappings":"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","sourcesContent":["\nimport React,{useState,useEffect,prevState} from \"react\";\nimport { Container,Button} from 'semantic-ui-react';\nimport \"./style.css\";\nimport Label from \"../Label\";\nimport TextArea from \"../TextArea\";\nimport TextField from \"../TextField\";\nimport API from \"../../utils/API.js\"\nimport { isNumber } from \"util\";\nimport { isFlowBaseAnnotation } from \"@babel/types\";\n\nfunction ForwardConfig(){\n  let [data,setData]=useState([]);\n  const [userPort,setUserPort]=useState({\"port\":\"\"});\n  const [error,setError]=useState('');\n\n  useEffect(() => {\n     loadForwardConfig();\n  }, [])\n\nfunction loadForwardConfig() {\n  API.getForwardConfig()\n   .then(res => {\n       //write consecutive ports as ranges\n       let data2=res.config;\n       console.log(data2.length);\n       let rslt=[];\n       let low=data2[0];\n       let high=data2[0];\n       for (let i=1;i<data2.length;i++) {\n          if (data2[i]===high+1){\n              high=data2[i];\n          }\n          else{\n            if(low!==high){\n               rslt.push(low+\"-\"+high);\n            }\n            else{\n              rslt.push(low);\n            }   \n            low=data2[i];\n            high=data2[i];\n            console.log(\"Hrrrr\"+rslt);\n          }\n        \n       }\n       if (low!==high){\n        rslt.push(low+\"-\"+high);\n       }\n       else{\n         rslt.push(low);\n       }\n       \n       //setData(data=>[...data,...res.config]);\n       setData(data=>[...data,...rslt]);\n      \n   } \n   )\n   .catch(err => console.log(err));\n};\n\nconst handleInputChange=(event)=>{\n  const {name,value}=event.target;\n  setUserPort({...userPort,[name]:value}) \n  setError(\"\");\n \n}\nfunction handleNew(){\n  if (validPorts()){\n    console.log(\"New:\"+userPort.port);\n    API.setForwardConfig(false,userPort.port).then(result=>window.location.reload(false));\n\n  }  \n  else{\n    console.log(error);\n  }\n}\nfunction handleAppend(){\n  if (validPorts()){\n   console.log(\"Append:\"+userPort.port);\n   API.setForwardConfig(true,userPort.port).then(result=>window.location.reload(false)); \n  } \n  else{\n    console.log(error);\n  }\n}\nfunction handleReset(){\n    API.setForwardConfig(false,[]).then(result=>window.location.reload(false)); \n}\n//ports should be numbers seperated by commas or number ranges designated by - and should be between 1-65535\nfunction validPorts(){\n  var isnum =  /^\\d+$/;\n  const prts=userPort.port.split(\",\")\n  \n  for (let i=0;i<prts.length;i++){\n    \n  //If not number\n  \n    if (!isnum.test(prts[i])){\n      //is a range\n      if (prts[i].indexOf(\"-\")!==-1){\n        const range=prts[i].split(\"-\");\n        //range is not a number or lower range is bigger than upper range\n        if(!isnum.test(range[0])||!isnum.test(range[1])||(parseInt(range[0])>parseInt(range[1]))){\n          console.log(isnum.test(range[0]));\n          setError(\"Invalid Range of Ports\");\n          return false;\n        }\n      }\n      else{\n        setError(\"A port should be of a number type!!\");\n        return false;\n      }\n    }\n    else{\n      //is not between 1 and 65535\n      if ((1>parseInt(prts[i])||parseInt(prts[i])>65535)){\n        setError(\"Ports have to be in the range 1-65535\");\n          return false;\n      }\n    }\n  }\n  setError(\"\");\n  return true;\n}\n\nreturn ( \n    <Container className =\"container forwardContainer\">\n       \n        <Label message=\"Current List Of Ports:\"/>\n        <TextArea readOnly style={{ marginBottom: '2em' }} value={data}/>\n        \n        <Label message=\"Add Ports:\"/>\n        <TextField  style={{ marginBottom: '1em' }} onChange={handleInputChange} value={userPort.port} name=\"port\" type=\"text\"/>\n        <span style={{color: \"red\", marginTop:\"1em\"}}>{error}</span><br/><br/>\n        <Button  className=\"button\" attached=\"left\" onClick={handleNew} >New</Button>\n        <Button className=\"button\" attached=\"right\" onClick={handleAppend}>Append</Button>\n        <Button className=\"button\" attached=\"right\" onClick={handleReset}>Reset</Button>\n       \n    </Container>\n   );\n  }   \n\n  export default ForwardConfig;\n"]},"metadata":{},"sourceType":"module"}