{"ast":null,"code":"import axios from \"axios\"; //import ipCollection2 from \"../config.json\";\n\nexport default {\n  test: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/test'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n    /*\n    .then(function (response) {\n    // handle success\n    console.log(response);\n    })\n    .catch(function (error) {\n    // handle error\n    console.log(error);\n    })\n    .finally(function () {\n    // always executed\n    console.log('axios test');\n    });*/\n\n  },\n  osirisTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/osirisTest'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n    /*\n    .then(function (response) {\n    // handle success\n    console.log(response);\n    })\n    .catch(function (error) {\n    // handle error\n    console.log(error);\n    })\n    .finally(function () {\n    // always executed\n    console.log('axios test');\n    });*/\n\n  },\n  dataTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/dataTest'); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  usernameChange: async function (a) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/userChange', {\n        firstName: a\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  passwordChange: async function (b) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/testTwoo', {\n        lastName: b\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  login: async function (credentials) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/login', {\n        username: credentials.username,\n        password: credentials.password\n      });\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  osirisChange: async function (o) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/osirisChange', {\n        osirisip: o\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  dataChange: async function (d) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/dataChange', {\n        newData: d\n      }); //console.log(result)\n\n      return result;\n    } catch (error) {\n      console.log(error);\n    } ////////////////\n\n  },\n  getAllWAN: async function () {\n    const output = await Promise.all([axios.get(\"http://localhost:5000/nconfig\"), axios.get(\"http://localhost:5000/latthr\")]).then(([config, latthr]) => {\n      console.log(config);\n      console.log(latthr);\n      let wans = config.data.interface.wan;\n      console.log(wans);\n      let latthu = latthr.data;\n      console.log(latthu);\n      return {\n        regdata: wans,\n        latthu: latthu\n      };\n    });\n    return output; //const result= await axios.get(\"http://localhost:5000/nconfig\")\n    //const res= await axios.get(\"http://localhost:5000/latthr\");\n  },\n  getIPs: async function (i) {\n    const result = await axios.get(\"http://localhost:5000/nconfig\"\n    /*, arr2, { headers: {  \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'}\n      }*/\n    );\n    console.log(result);\n    let ipCollection = result.data.interface.wan;\n    console.log(ipCollection);\n    return new Promise(resolve => {\n      for (let k = 0; k < ipCollection.length; k++) {\n        let data = ipCollection[k]; // if (ipCollection[k].subflow==i)\n\n        if (data.subflow == i) resolve({\n          name: data.name,\n          gatewayIP: data.gatewayIP,\n          IP: data.IP,\n          proxyIP: data.proxyIP,\n          status: data.status\n        });\n      }\n    });\n  },\n  setIPs: function (arr) {\n    console.log(arr);\n    let arr2 = [];\n\n    for (let k = 1; k < arr.length; k++) {\n      arr[k].subflow = k;\n      arr2.push(arr[k]);\n    }\n\n    console.log(arr2);\n    axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  },\n  setHaipe: function (obj) {\n    console.log(obj);\n    axios.post(\"http://127.0.0.1:5000/haipe\", {\n      \"client\": obj.client,\n      \"server\": obj.server,\n      \"status\": obj.status\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }).then(result => console.log(\"Heyy \" + JSON.stringify(result.data))); //here will be send to back end for saving into json file\n  }\n};","map":{"version":3,"sources":["/Users/Rmos/codingBootcamp/portApps/networkConsole/src/utils/adminAPI.js"],"names":["axios","test","result","get","error","console","log","osirisTest","dataTest","usernameChange","a","post","firstName","passwordChange","b","lastName","login","credentials","username","password","osirisChange","o","osirisip","dataChange","d","newData","getAllWAN","output","Promise","all","then","config","latthr","wans","data","interface","wan","latthu","regdata","getIPs","i","ipCollection","resolve","k","length","subflow","name","gatewayIP","IP","proxyIP","status","setIPs","arr","arr2","push","headers","JSON","stringify","setHaipe","obj","client","server"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n//import ipCollection2 from \"../config.json\";\n\n\n\nexport default {\n\n  test: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/test')\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    /*\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n    console.log('axios test');\n  });*/\n  },\n  osirisTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/osirisTest')\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    /*\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n    console.log('axios test');\n  });*/\n  },\n  dataTest: async function () {\n    try {\n      const result = await axios.get('http://127.0.0.1:5000/dataTest')\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n\n  },\n  usernameChange: async function (a) {\n\n\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/userChange', {\n        firstName: a\n      })\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    ////////////////\n\n  },\n\n  passwordChange: async function (b) {\n\n\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/testTwoo', {\n        lastName: b\n      })\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    ////////////////\n\n  },\n  login: async function (credentials) {\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/login', {\n        username:credentials.username,\n        password:credentials.password\n      })\n      \n      return result\n    }\n    catch (error) { console.log(error) }\n    ////////////////\n\n  },\n  osirisChange: async function (o) {\n\n\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/osirisChange', {\n        osirisip: o\n      })\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    ////////////////\n\n  },\n  dataChange: async function (d) {\n\n\n    try {\n      const result = await axios.post('http://127.0.0.1:5000/dataChange', {\n        newData: d\n      })\n      //console.log(result)\n      return result\n    }\n    catch (error) { console.log(error) }\n    ////////////////\n\n  },\n  getAllWAN: async function () {\n\n    const output = await Promise.all([axios.get(\"http://localhost:5000/nconfig\"), axios.get(\"http://localhost:5000/latthr\")]).then(([config, latthr]) => {\n      console.log(config)\n      console.log(latthr)\n\n\n\n      let wans = config.data.interface.wan;\n      console.log(wans)\n      let latthu = latthr.data;\n      console.log(latthu)\n      return ({ regdata: wans, latthu: latthu })\n    })\n    return output;\n    //const result= await axios.get(\"http://localhost:5000/nconfig\")\n    //const res= await axios.get(\"http://localhost:5000/latthr\");\n\n\n  },\n  getIPs: async function (i) {\n    const result = await axios.get(\"http://localhost:5000/nconfig\"\n      /*, arr2, { headers: {  \n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'}\n        }*/\n    );\n    console.log(result);\n    let ipCollection = result.data.interface.wan;\n    console.log(ipCollection);\n    return new Promise((resolve) => {\n\n\n      for (let k = 0; k < ipCollection.length; k++) {\n        let data = ipCollection[k];\n        // if (ipCollection[k].subflow==i)\n        if (data.subflow == i)\n          resolve({\n            name: data.name,\n            gatewayIP: data.gatewayIP,\n            IP: data.IP,\n            proxyIP: data.proxyIP,\n            status: data.status\n          });\n      }\n    }\n    );\n  },\n  setIPs: function (arr) {\n    console.log(arr);\n    let arr2 = [];\n    for (let k = 1; k < arr.length; k++) {\n      arr[k].subflow = k;\n      arr2.push(arr[k]);\n    }\n    console.log(arr2);\n    axios.post(\"http://127.0.0.1:5000/nconfig\", arr2, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }\n    ).then(result => console.log(\"Heyy \" + JSON.stringify(result.data)));\n    //here will be send to back end for saving into json file\n\n  },\n  setHaipe: function (obj) {\n    console.log(obj);\n    axios.post(\"http://127.0.0.1:5000/haipe\", {\n      \"client\": obj.client,\n      \"server\": obj.server,\n      \"status\": obj.status\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n      }\n    }\n    ).then(result =>\n      console.log(\"Heyy \" + JSON.stringify(result.data))\n    );\n    //here will be send to back end for saving into json file\n\n  }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}